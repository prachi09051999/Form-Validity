{"version":3,"sources":["hooks/use-input.js","components/BasicForm.js","App.js","index.js"],"names":["useInput","validationLogic","useState","enteredValue","setEnteredValue","enteredValueTouched","setEnteredValueTouched","enteredValueIsValid","valueInputIsInvalid","resetValue","valueInputChangeHandler","event","target","value","valueInputBlurHandler","BasicForm","props","val","trim","firstName","firstNameValid","firstNameInvalid","resetFirstName","firstNameChangeHandler","firstNameBlurHandler","secondName","secondNameValid","secondNameInvalid","resetSecondName","secondNameChangeHandler","secondNameBlurHandler","includes","emailValue","emailValid","emailInvalid","resetEmail","emailChangeHandler","emailBlurHandler","formValid","firstNameClasses","secondNameClasses","emailClasses","onSubmit","e","preventDefault","console","log","className","htmlFor","type","id","onChange","onBlur","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"mLA0BeA,EAxBE,SAACC,GAChB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsDF,oBAAS,GAA/D,mBAAOG,EAAP,KAA4BC,EAA5B,KACMC,EAAsBN,EAAgBE,GAgB5C,MAAO,CACLA,eAAaI,sBAAqBC,qBAhBPD,GAAuBF,EAgBKI,WANxC,WACfL,EAAgB,IAChBE,GAAuB,IAI2CI,wBAdpC,SAACC,GAC/BP,EAAgBO,EAAMC,OAAOC,QAa8DC,sBAV/D,SAACH,GAC7BL,GAAuB,M,OCqDZS,EAhEG,SAACC,GAEjB,MAAsOhB,GAAS,SAACiB,GAAD,MAAsB,KAAfA,EAAIC,UAApOC,EAAtB,EAAQhB,aAA6CiB,EAArD,EAAgCb,oBAA0Dc,EAA1F,EAAqEb,oBAAmDc,EAAxH,EAA4Gb,WAAoDc,EAAhK,EAAuIb,wBAAwEc,EAA/M,EAAwLV,sBAIxL,EAA4Od,GAAS,SAACiB,GAAD,MAAuB,KAAfA,EAAIC,UAA3OO,EAAtB,EAAQtB,aAA8CuB,EAAtD,EAAiCnB,oBAA2DoB,EAA5F,EAAuEnB,oBAAoDoB,EAA3H,EAA+GnB,WAAqDoB,EAApK,EAA2InB,wBAAyEoB,EAApN,EAA6LhB,sBAI7L,EAAmNd,GAAS,SAACiB,GAAD,OAAQA,EAAIc,SAAS,QAA3NC,EAAtB,EAAQ7B,aAA8C8B,EAAtD,EAAiC1B,oBAAsD2B,EAAvF,EAAkE1B,oBAA+C2B,EAAjH,EAAqG1B,WAAgD2B,EAArJ,EAA4H1B,wBAAoE2B,EAAhM,EAAyKvB,sBAIrKwB,GAAY,EACblB,GAAkBM,GAAmBO,IACtCK,GAAY,GAKd,IAaMC,EAAmBlB,EAAmB,uBAAyB,eAC/DmB,EAAoBb,EAAoB,uBAAyB,eACjEc,EAAeP,EAAe,uBAAyB,eAE7D,OACE,uBAAMQ,SAlBkB,SAACC,GACzBA,EAAEC,iBACEN,IACJO,QAAQC,IAAI3B,GACZ0B,QAAQC,IAAIrB,GACZoB,QAAQC,IAAId,GACZV,IACAM,IACAO,MAUA,UACE,sBAAKY,UAAU,gBAAf,UACE,sBAAKA,UAAYR,EAAjB,UACE,uBAAOS,QAAQ,OAAf,wBACA,uBAAOC,KAAK,OAAOC,GAAG,OAAOrC,MAASM,EAAWgC,SAAY5B,EAAwB6B,OAAU5B,IAC9FH,GAAoB,6DAEvB,sBAAK0B,UAAWP,EAAhB,UACE,uBAAOQ,QAAQ,OAAf,uBACA,uBAAOC,KAAK,OAAOC,GAAG,OAAOrC,MAASY,EAAY0B,SAAYtB,EAAyBuB,OAAUtB,IAChGH,GAAqB,gEAG1B,sBAAKoB,UAAWN,EAAhB,UACE,uBAAOO,QAAQ,OAAf,4BACA,uBAAOC,KAAK,OAAOC,GAAG,OAAOrC,MAASmB,EAAYmB,SAAYf,EAAoBgB,OAAUf,IAC3FH,GAAgB,+DAEnB,qBAAKa,UAAU,eAAf,SACE,wBAAQM,UAAaf,EAArB,0BClDOgB,MARf,WACE,OACE,qBAAKP,UAAU,MAAf,SACE,cAAC,EAAD,OCANQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.3a88bf84.chunk.js","sourcesContent":["import { useState } from 'react';\n\nconst useInput = (validationLogic) => {\n  const [enteredValue, setEnteredValue] = useState('');\n  const [enteredValueTouched, setEnteredValueTouched] = useState(false);\n  const enteredValueIsValid = validationLogic(enteredValue);\n  const valueInputIsInvalid = !enteredValueIsValid && enteredValueTouched;\n\n  const valueInputChangeHandler = (event) => {\n    setEnteredValue(event.target.value);\n  };\n\n  const valueInputBlurHandler = (event) => {\n    setEnteredValueTouched(true);\n  };\n\n  const resetValue=()=>{\n    setEnteredValue('');\n    setEnteredValueTouched(false);\n  }\n\n  return {\n    enteredValue,enteredValueIsValid, valueInputIsInvalid, resetValue,valueInputChangeHandler, valueInputBlurHandler\n  }\n}\n\nexport default useInput;","import useInput from \"../hooks/use-input\";\n\nconst BasicForm = (props) => {\n  // First Name\n  const { enteredValue: firstName,enteredValueIsValid: firstNameValid, valueInputIsInvalid: firstNameInvalid, resetValue: resetFirstName,valueInputChangeHandler: firstNameChangeHandler, valueInputBlurHandler: firstNameBlurHandler}= useInput((val)=>val.trim() !== '');\n\n  // Second Name\n\n  const { enteredValue: secondName,enteredValueIsValid: secondNameValid, valueInputIsInvalid: secondNameInvalid, resetValue: resetSecondName,valueInputChangeHandler: secondNameChangeHandler, valueInputBlurHandler: secondNameBlurHandler}= useInput((val)=> val.trim() !== '');\n\n  // Email\n\n  const { enteredValue: emailValue,enteredValueIsValid: emailValid, valueInputIsInvalid: emailInvalid, resetValue: resetEmail,valueInputChangeHandler: emailChangeHandler, valueInputBlurHandler: emailBlurHandler}= useInput((val)=> val.includes('@') );\n\n  // Form Validity\n\n  let formValid = false;\n  if(firstNameValid && secondNameValid && emailValid){\n    formValid = true;\n  }\n\n  // Form Submit Handler \n\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n    if(!formValid) return;\n    console.log(firstName);\n    console.log(secondName);\n    console.log(emailValue);\n    resetFirstName();\n    resetSecondName();\n    resetEmail();\n  }\n\n  // Conditional classes\n\n  const firstNameClasses = firstNameInvalid ? 'form-control invalid' : 'form-control';\n  const secondNameClasses = secondNameInvalid ? 'form-control invalid' : 'form-control';\n  const emailClasses = emailInvalid ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit = {formSubmitHandler}>\n      <div className='control-group'>\n        <div className= {firstNameClasses}>\n          <label htmlFor='name'>First Name</label>\n          <input type='text' id='name' value = {firstName} onChange = {firstNameChangeHandler} onBlur = {firstNameBlurHandler} />\n          {firstNameInvalid && <p>Please enter a valid Name</p>}\n        </div>\n        <div className={secondNameClasses}>\n          <label htmlFor='name'>Last Name</label>\n          <input type='text' id='name' value = {secondName} onChange = {secondNameChangeHandler} onBlur = {secondNameBlurHandler} />\n          {secondNameInvalid && <p>Please enter a valid Name</p>}\n        </div>\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input type='text' id='name' value = {emailValue} onChange = {emailChangeHandler} onBlur = {emailBlurHandler}/>\n        {emailInvalid && <p>Please enter a valid E-mail</p>}\n      </div>\n      <div className='form-actions'>\n        <button disabled = {!formValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n","import BasicForm from './components/BasicForm';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <BasicForm />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}